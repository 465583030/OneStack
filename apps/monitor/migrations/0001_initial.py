# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-19 09:53
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlertAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('actions', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'alert_actions',
            },
        ),
        migrations.CreateModel(
            name='AlertCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('event_type', models.CharField(max_length=1024)),
                ('value', models.DecimalField(decimal_places=2, max_digits=16)),
                ('max_alert_times', models.IntegerField()),
                ('interval', models.IntegerField(default=30)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alert_conditions',
            },
        ),
        migrations.CreateModel(
            name='AlertEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('alert_status', models.CharField(max_length=10)),
                ('alert_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.AlertAction')),
                ('alert_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.AlertCondition')),
            ],
            options={
                'db_table': 'alert_events',
            },
        ),
        migrations.CreateModel(
            name='APIAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('api_address', models.CharField(max_length=2048)),
                ('method', models.CharField(default='GET', max_length=10)),
                ('access_frequency', models.IntegerField(default=30)),
                ('params', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'api_addresses',
            },
        ),
        migrations.CreateModel(
            name='APIMonitorInfoCollection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('return_code', models.IntegerField()),
                ('status', models.CharField(max_length=10)),
                ('return_data', models.CharField(blank=True, max_length=5000, null=True)),
                ('response_time', models.IntegerField(blank=True)),
                ('api_address', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='monitor.APIAddress')),
            ],
            options={
                'db_table': 'api_monitor_info_collections',
            },
        ),
        migrations.CreateModel(
            name='EventReceiveGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('group_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
            ],
            options={
                'db_table': 'event_receive_groups',
            },
        ),
        migrations.CreateModel(
            name='EventReceiveUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('user_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
            ],
            options={
                'db_table': 'event_receive_users',
            },
        ),
        migrations.CreateModel(
            name='MonitorWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('access_frequency', models.IntegerField(blank=True, default=30)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monitor_websites',
            },
        ),
        migrations.CreateModel(
            name='ServerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('server_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('group_name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'server_groups',
            },
        ),
        migrations.CreateModel(
            name='ServerInfoCollection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cpu_utilization', models.DecimalField(blank=True, decimal_places=2, max_digits=16)),
                ('mem_utilization', models.DecimalField(blank=True, decimal_places=2, max_digits=16)),
                ('disk_info', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('net_info', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tcp_connection', models.IntegerField(blank=True)),
            ],
            options={
                'db_table': 'server_info_collections',
            },
        ),
        migrations.CreateModel(
            name='VisitTrackWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('domain_name', models.CharField(max_length=512)),
                ('track_code', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'visit_track_websites',
            },
        ),
        migrations.CreateModel(
            name='VisitTrackWebsiteInfoCollection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('visit_url', models.CharField(blank=True, max_length=2048)),
                ('visitor_ip', models.CharField(blank=True, max_length=32, null=True)),
                ('visit_track_website', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='monitor.VisitTrackWebsite')),
            ],
            options={
                'db_table': 'visit_track_website_info_collections',
            },
        ),
        migrations.CreateModel(
            name='WebsiteMonitorInfoCollection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('return_code', models.IntegerField()),
                ('response_time', models.IntegerField()),
                ('visit_location', models.CharField(blank=True, max_length=1024, null=True)),
                ('monitor_website', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='monitor.MonitorWebsite')),
            ],
            options={
                'db_table': 'website_monitor_info_collections',
            },
        ),
    ]
